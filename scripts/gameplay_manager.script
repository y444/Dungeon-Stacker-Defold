local starting_row = 1
local starting_length = 3
local starting_speed = 0.5
local speedup_factor = 0.85
local panels = {}

local function start_gameplay(self)
	go.delete(panels, true)
	panels = {}
	self.row = starting_row
	self.length = starting_length
	self.speed = starting_speed
	msg.post("/torches#torches", "lightup", {amount = 0})
end

local function change_length(self)
	local x_poses = {}
	local x = go.get_world_position(panels[#panels]).x
	for i = 1, self.length do
		table.insert(x_poses, x + 16 * (i - 1))
	end
	local prev_x_poses = {56, 72, 88}
	if #panels > 1 then
		prev_x_poses = {}
		local x = go.get_world_position(panels[#panels-1]).x
		for i = 1, go.get(panels[#panels-1], "length") do
			table.insert(prev_x_poses, x + 16 * (i - 1))
		end
	end
	prev_length = 3
	if #panels > 1 then prev_length = go.get(panels[#panels-1], "length") end
	local dead_blocks = {}
	for i = 1, self.length do
		local is_dead = true
		for j = 1, prev_length do
			if x_poses[i] == prev_x_poses[j] then is_dead = false end
		end
		if is_dead == true then table.insert(dead_blocks, i) end
	end
	msg.post(panels[#panels], "trim", {dead = dead_blocks})
	-- дорисовываем бордюры для текущей панели
	self.length = self.length - #dead_blocks
	if self.length < 0 then self.length = 0 end
end

local function spawn_panel(self)
	local panel_properties = {row = self.row, length = self.length, speed = self.speed}
	local panel_id = factory.create("#panel_factory", nil, nil, panel_properties)
	local panel_url = msg.url(panel_id)
	panel_url.fragment = "panel"
	table.insert(panels, panel_url)
end

local function raise_level(self)
	self.row = self.row + 1
	self.speed = self.speed * speedup_factor
end

function init(self)
	msg.post(".", "acquire_input_focus")
	start_gameplay(self)
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		local last_panel = panels[#panels]
		if (#panels == 15 or self.length == 0) and go.get(last_panel, "is_moving") == false then
			start_gameplay(self)
			return
		end
		if last_panel and go.get(last_panel, "is_moving") then
			msg.post(last_panel, "stop")
			change_length(self)
			raise_level(self)
		end
		if #panels < 15 and self.length ~= 0 then
			msg.post("/torches#torches", "lightup", {amount = self.row-1})
			spawn_panel(self)
		end
	end
end
